name: Rust

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

env:
  CARGO_TERM_COLOR: always
  RUST_CHANNEL: stable
  # Lets us format with unstable rustfmt options
  RUST_FMT_CHANNEL: nightly

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust toolchain
        run: |
          rustup toolchain install --profile minimal --no-self-update ${{ env.RUST_CHANNEL }}
          rustup default ${{ env.RUST_CHANNEL }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5
      - name: Run cargo test
        run: cargo test --features splr,cadical,kissat,intel-sat,ipasir-up
        if: matrix.os == 'ubuntu-latest'
      - name: Run cargo test
        run: cargo test -p pindakaas --features splr,cadical,ipasir-up
        if: matrix.os == 'windows-latest'
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust toolchain
        run: |
          rustup toolchain install --profile minimal --component clippy --no-self-update ${{ env.RUST_CHANNEL }}
          rustup default ${{ env.RUST_CHANNEL }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5
      - name: Run clippy
        run: cargo clippy --tests --features splr,cadical,kissat,intel-sat,ipasir-up -- -D warnings
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust toolchain
        run: |
          rustup toolchain install --profile minimal --component rustfmt --no-self-update ${{ env.RUST_FMT_CHANNEL }}
          rustup default ${{ env.RUST_CHANNEL }}
      - name: Run cargo format
        run: cargo +nightly fmt --all --check
