name: Run Tests

on:
  push:
    branches:
      - "develop"
  pull_request:
  workflow_dispatch:

env:
  RUST_CHANNEL: "stable"
  RUST_COV_CHANNEL: "nightly"

jobs:
  test-coverage:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@v0
        with:
          cache: false
          channel: ${{ env.RUST_COV_CHANNEL }}
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov.json
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: codecov.json
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@v0
        with:
          cache: false
          channel: ${{ env.RUST_COV_CHANNEL }}
      - name: Run cargo test
        run: cargo test -p pindakaas --features splr,cadical,ipasir-up,tracing
        if: matrix.os == 'windows-latest'
      - name: Run cargo test
        run: cargo test --all-features
        if: matrix.os != 'windows-latest'
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust toolchain and clippy
        uses: moonrepo/setup-rust@v0
        with:
          channel: ${{ env.RUST_CHANNEL }}
          components: clippy
      - name: Run clippy
        run: cargo clippy --tests -- -D warnings
      - name: Run clippy with all features
        run: cargo clippy --tests --all-features -- -D warnings
